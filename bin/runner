#!/usr/bin/env ruby
# frozen_string_literal: true

if ARGV.size < 1
  puts 'usage: runner name'
  exit 1
end

def ask?(message)
  print message
  puts " (Y/n)"
  !!(gets.chop =~ /^y/i)
end

def require_with_install(name)
  unless require name
    if ask? "install #{name} gem?"
      system("gem install #{name}")
    else
      exit
    end
  end
  require name
end

require_with_install 'xdg'
require_with_install 'redis'

queue_name = ARGV.shift
cache_dir = XDG['CACHE_HOME'].to_path.join('mycmd', queue_name)
scripts_dir = cache_dir.join('scripts')
scripts_dir.mkpath unless scripts_dir.exist?
results_dir = cache_dir.join('results')
results_dir.mkpath unless results_dir.exist?

redis_url = ENV.fetch('REDIS_URL', 'redis://localhost:6379/0')
redis = Redis.new(url: redis_url)
redis_namespace = 'mycmd'
key = [redis_namespace, queue_name].join(':')

loop do
  id = redis.rpop(key)
  if id
    puts "running #{key} - #{id}"
    result = system("#{scripts_dir.join(id)}.sh >& #{results_dir.join("#{id}.log")}")
    if result
      puts "[OK] #{key} - #{id}"
    else
      puts "[NG] result #{queue_name} #{id}"
    end
    puts '--------------------------------------------'
  end
  sleep 1
end
